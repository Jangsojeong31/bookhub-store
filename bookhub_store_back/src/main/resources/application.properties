spring.config.import=optional:application-secret.properties
spring.application.name=bookhub_store_back

server.port=8080

spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:bookhub_store_db}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:password}

jwt.secret=${JWT_SECRET}
jwt.expiration=10000000

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${kakao_REST_API_key}
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/oauth2/callback/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2
spring.security.oauth2.client.registration.naver.client-id=${naver_client_key}
spring.security.oauth2.client.registration.naver.client-secret=${naver_client_secret}
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/oauth2/callback/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name, email

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${google_REST_API_key}
spring.security.oauth2.client.registration.google.client-secret=${google_client_secret}
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=email, profile

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# File Upload
file.upload.path=C:/upload/files
spring.mvc.static-path-pattern=/files/**
spring.web.resources.static-locations=file:C:/upload/files

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

